kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: keycloak
  namespace: keycloak
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      restartPolicy: Always
      containers:
        - name: keycloak
          command:
            - "/opt/keycloak/bin/kc.sh"
            - "start"
          image: "{{ .Values.keycloak.image.repository }}:{{ .Values.keycloak.image.tag }}"
          env:
            - name: KC_BOOTSTRAP_ADMIN_USERNAME
              value: admin
            - name: KC_BOOTSTRAP_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-creds
                  key: password
            - name: KC_DB
              value: postgres
            - name: KC_DB_USERNAME
              value: root
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql
                  key: password
            - name: KC_DB_URL
              value: "jdbc:postgresql://postgres.databases.svc.cluster.local:5432/keycloak"
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HTTPS_ENABLED
              value: "false"
            - name: KC_PROXY_HEADERS
              value: xforwarded
            - name: KC_LOG_LEVEL
              value: "INFO"
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_HTTP_PORT
              value: "8080" 
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          resources:
            requests:
              cpu: "300m"
              memory: "300Mi"
            limits:
              cpu: "500m"
              memory: "1500Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: keycloak
  namespace: keycloak
spec:
  type: NodePort
  selector:
    app: keycloak
  ports:
    - name: http
      port: 80
      targetPort: 8080
      nodePort: 30080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: keycloak
  namespace: keycloak
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
  - host: keycloak.local
    http:
      paths:
      - path: /keycloak
        pathType: Prefix
        backend:
          service:
            name: keycloak
            port:
              number: 80